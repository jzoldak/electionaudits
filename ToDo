ToDo list for ElectionAudits   http://neal.mcburnett.org/electionaudits/

New view to produce tally forms for contests: /batch/batch#/contest#/
 Election name Tally batchid, scan batch id, date, start/finish times, count #
 Names of people doing the counting: vote counter and recorder.
 Race title, Choices - YES/NO/Under/Over/Not-On-Ballot
 sums by row and column
 # mbbs?

Add a little calculator form to explain SSR, and link to it from each
random number.
Do the same for NEGEXP threshholds.  Print the value of "w".

Incorporate more batch info: associated precinct, sub-batches (scan batches) etc

If there is no seed yet for /selection/ reports, note that fact.
Generate index.html title from election name
Make some of the text conditional for development vs publication

Add timestamps to pages

Get threshhold stats appropriate for races with less than 100% proportion
Control audit report with GET params for sorting, masking results etc

Handle subdirectories or glob in incoming for windows.  handle zips also?

Use custom view for more efficiently sorted audit report detail and report.html
no inner nested query loop contestbatch.votecount_set.all|dictsort:"choice.name"
Separate out Contests by CountyElection in audit report
Don't assume, or check, that audit report rows are all in the same sequence
Put Under, Over at end
Allow user to sort them by winner or alphabetically
combine/merge based on total ballots

Figure out how to include MBB ballot counts (CVRs) in batch?
 from pdf: pyPdf or pdftotext: Total Number of Voters : 568 of 170,066 = 0.33%
  But note that that doesn't provide ballot counts by type!
  So e.g. if a batch has both ED and EV votes, may need to just apportion
  all of them to one type for now, search for zeros later, and reapportion then
 Use csv report?  or excel?
 Based on president, or max of all contests?
 nope: there is no contest that everyone can vote on -
   e.g. a dozen absentee landowners can't vote for president in Boulder County?
 too bad @ballots_cast != 'Total Number of Voters' from pdf?

In new custom report view add column for selection, highlight selected
Error for -s with only one batch?
report.html: Incorporate style="text-align: right;" into css

Put explanatory notes (e.g. about margins) in FAQ or help html,
and add link from report, reports, etc

Set sequence of Choices on first save

cache Contest.stats()
parsers: cache election, batch and contest lookups for better speed

Get --contest working again
Add custom combining/merging of contestbatches post-parse

Deal better with "Not enough ballots for privacy" at end of input for a contest
 complain more loudly, prompt user for OK?
 Save temp db record for next input batch?

Provide help for selecting contests weighted by inverse margin up to 1/.005

Check out generating this message because of entry in admin after reboot:
 403 Forbidden Cross Site Request Forgery detected. Request aborted.

Validation: Should dtd url be in DOCTYPE?  Add character encoding?

Synergy between selections for different contests to count multiple
contests on same batch: Use NEGEXP, setting probability for each batch,
and using same random number for the batch for all contests.

 Need to combine batches the same way across contests, or refer to other contestbatches.
 Combine based on overall batch size?  Or based on min of all races??
  And mask small numbers, to be revealed in combination with others later on?

Find a way to distinguish paper from dre batches and not combine them
 add option ala "don't combine if batch letter 14 is different"
 or general RE logic to compare batch names?

Append batchid to type, not batch, for csv input?
Peel it off of file name for xml?

parsers.py: accept xml precinct reports also
Parse data from San Diego - easy csv format in Election Night Results Export.zip
 http://www.sdcounty.ca.gov/voters/Eng/rov_highlights.shtml

Add version number to database, check it, maybe auto-convert.
Make it easy to run with debug but no other dependencies.
 And perhaps no sql logging?
Report 500 errors better, e.g. http://www.djangosnippets.org/snippets/638/

Provide a way to save all audit reports for publication from another server.
Provide secure timestamps via online timestamp server
  http://en.wikipedia.org/wiki/Trusted_timestamping
Do some sort of simple signature via keyed hash based on settings.SECRET_KEY?

Need a logo.  e.g.
  magnifying glass looking at a checkmark
  http://whtalk.blogspot.com/2008/07/citizens-audit-completed-in-enfield.html
  a grid of checkboxes, with some of them randomly selected and
   colored/highlighted/focussed/whatever - colored magnifying glass?

Get setup.py sdist to create empty "incoming" directory; delete DELETEME.txt

Add pdf file name to batch model
Add xml file modification date to batch model
Add link to pdf file in report.html or batch.html
Add links to batches in report.html

new approach, user interface: move files from "incoming" to "processed"
 and directories....  all at end?  and keep timestamp
view /parse/ with get keywords for not sorted, not incremental
 do really long test for timeouts
 display files in sorted order
 shows what is in "incoming" directory, and moves all but last one to
 "processed" directory which is also shown
 maybe via another directory until done   for --subtract, etc
 --chronological: track high-water mark, and show error given out-of-order run
 improve feedback somehow: show progress (javascript?)


Do more rigorous statistics when proportion is not 100%, given better
information about audit units around the state.


Advise user to use django.middleware.gzip.GZipMiddleware if deploying
on public site.

set USE_ETAGS=True ?

Ad-hoc form: add text box with list of contest sizes, or size*x
 or offer common size distributions
   Minnesota, Colorado, Boulder, California, San Mateo, 

Customize admin login screen to refer to help/README and initial
credential creation, along with how to remove those hints for a public site.

Display header rows more compactly and clearly in reports.html
Avoid repeating footnote text - make an include or template tag or the like.

How to package django-based windows apps so they are easier to use?
Try http://www.python.org/doc/2.5/dist/postinstallation-script.html
and look at Nullsoft Scriptable Install System (NSIS).
Any way to get a windows GUI interface to manage.py?

Handle argument of *.xml in windows also - expand it myself with glob?

Add tests, e.g. output from varsize.py

To help with targetted selection by runner-up, display margin for each
audit unit, and flag outliers.

Make upgrades easier.
Ask user where they want the database to be [must do very early on]
 or put in Documents
Do .bat file for path, with path %PATH%;__dir__??
set pythonpath with __file__ in manage.py?

Test with python 2.6

parsers.py: print message before lengthy save process

Add ability to hide votecounts until hand count done - just totals and contest ballots
ability to track what has been selected for audit
Add a way to calculate stats given what was audited, according to Stark
and PPEBWR or whatever.
Add separate report of audited stuff, with hand count results
Use clearer error message for duplicate data entry
Define "incoming" directory and automatically parse files put in there
and/or provide gui for parse file input
Keep track of batches seen, and what is new, and which batch is "previous"
for use with the 1st in a new run

Allow filtering by type or precinct in audit report

Move to bzr-based versions: 0.7-r32 or 0.8.dev-r33 (would want bzr support)
use the -f option of easy_install for other deps
move to README.txt?

scenarios: test lots of data - speed, ease of fixing problem files

describe use of IDLE IDE for windows?

Fix contest detail report - not finding contestbatches (but little-used)
Paginate votecount report
Provide good html titles for all pages

Produce output in csv format also

Deal with xml namespace issue more elegantly

Improve documentation - put model diagram in media
Fix parsers optparse options for pydoc
Get rid of or document unused stuff

Generate actual selection of audit units via pps.py
based on random input from throw of dice, ala RFC 3797?

Add table relating batch names to description - type, source, mbbs, etc
and link to that from batch name

Support contests with multiple winners, instant runoff voting, etc
(Already supports Approval voting)

Separate parsers.py and util.py from django dependencies - use plugins?
look thru pylint advice
perhaps automatically generate doc and put in doc directory before packaging
auto-update README on web site

Use django choices for batch.type(?)
Add info about file arguments to auto-usage message

Perhaps for anonymity, print "few" rather than a number less than 3?

Provide variant methods of combining batches for privacy (class Push)
 really want to deal with entropy of results, not number
 preserve more audit units: try to only combine small units together
 can also generate a different CountyElection with more or less detail

While parsing xml, track unrecognized FormattedValue fields - dump
 FieldName, value and line

Develop view /<countyelection>/<contest>/auditreport:
 including just batches that are in the county

Add "audited" flag (selected, success, or failure with notes?)
 and form to mark them off
 or blank report for entering numbers.  timestamps?
 want audit results report by contest - flag discrepancies.  do stats??
 perhaps also progress flags - selected, fetched, counting, done, recheck
 and update stats
Provide report of just contestbatches selected for audit
Set template LANGUAGE_CODE or report or fix html errors in databrowse base.html

Put contest abbreviation in a new field, option to print with it or not

Encapsulate election-specific data in specific classes
  including list of contest edits ("replacements var"), fields of relevance, etc
  some day: do that based on "programming" data from Hart system?

Auto-sort result files, check for non-incremental results
Check for results that list different candidates for a contest
Look for columns that don't agree with previous result

Figure out how to have Contest.margin default to float('nan') without
 odd NULL errors.  After python 2.6 so it works in Windows also

Make it easier to provide statistics with appropriate confidence level for race
 print out csv for all contests with blanks
 include sequence number for contest based on order in report?

Add features to record canvassing work: tracking number of ballots
printed, distributed, counted via each method, provisionals, and other
aspects of ensuring that the right set of votes were counted.

for --contest, don't create other contests in AuditUnit.__init__()

Packaging:
==========
Currently for each new release:
 make sure version number is updated in setup.py
 check bzr diff
 i=Elect...
 bzr ls --versioned | sed 's/^/include /' > MANIFEST.in
 python setup.py sdist
 #maybe manually delete incoming/DELETME.txt
 cd /tmp
 tar zxf /srv/s/electionaudits/trunk/dist/$i.tar.gz
 cd $i/root
 ./manage.py test electionaudits

 commit changes in bzr
 scp -p dist/$i.tar.gz bcn:public_html/electionaudits/download/

Do it via the launchpad api:
 http://news.launchpad.net/api/recipe-for-uploading-files-via-the-api

Why does the order of auditunits sometimes change in the test?

Package up, as an egg?  And submit to http://pypi.python.org/pypi

use unique settings.SECRET_KEY, ala django_extensions: generate_secret_key.py
set up time zone?

Avoid dependency on setuptools version 0.6c9 to run (even to display help)
take out bzr dependencies for users
Include data files
Try to get windows egg
How to get "pure" package, not platform-dependent?
Get setup.py to create root directory in a demo script directory, not lib

maybe switch from __file__ to resource management system for packaged data files
 ala  http://peak.telecommunity.com/DevCenter/PythonEggs#resource-management
  from pkg_resources import Requirement, resource_filename
  filename = resource_filename(Requirement.parse("MyProject"),"sample.conf")
 but that won't take care of location for dev.db DATABASE_NAME

Parse xml files that have been compressed with e.g. zip
easy_install --editable projectname==dev
add setup.py --test and doctest support: wrapping tests in TestSuite

look at output during easy_install of lxml

setup.py register sdist bdist_egg upload --sign

describe how to host on google app engine

NOTE
====
In primary elections, when there may be multiple contests with the same
name per election (one for each party) the contest name extracted in
parsers.py needs to include the party name.
