ToDo list for ElectionAudits

Switch to BSD license for less confusion, wider uptake?

Use AuditUnit in parse_xml_crystal

Check for duplicate records

Provide makeauditunits option to name election.
separate out Contests by CountyElection in audit report

Generate django tables from incremental reports via --subtract in addition
 to std output reports as now.
 First, in make_audit_unit, generate new data structure from newtotals

Paginate votecount report
Provide good html titles for all pages

Produce output in csv format also

Deal with namespace issues - auto-edit file, or handle it another way.

Improve documentation
Get rid of or document unused stuff

Figure out ballot counts (CVRs) based on max of all contests in batch?
  or 'Total Number of Voters' from pdf?
Incorporate Rivest's varsize.py code to report statistics and confidence
 levels and select audit units to be audited.

Add table relating batch names to description - type, source, mbbs, etc
and link to that from batch name

Separate makeauditunits.py and util.py from django dependencies - use plugins?
separate makeauditunits.py from particular audittools.settings - pass arg?
rename/move electionaudit directory/module to electionaudits
look thru pylint advice
perhaps automatically generate doc and put in doc directory before packaging
auto-update README on web site

Use django choices for batch.type
Add info about file arguments to auto-usage message

Don't assume or check that audit report rows are all in the same sequence
Put Under, Over at end
Allow user to sort them by winner or alphabetically

Perhaps for privacy, print "few" rather than a number less than 3?

Provide variant methods of combining batches for privacy (class Push)
 preserve more audit units: try to only combine small units together
 can also generate a different CountyElection with more or less detail

While parsing xml, track unrecognized FormattedValue fields - dump
 FieldName, value and line

Develop view /<countyelection>/<contest>/auditreport:
 including just batches that are in the county

Add "audited" flag (selected, success, or failure with notes?)
 and form to mark them off
 or blank report for entering numbers.  timestamps?
 want audit results report by contest - flag discrepancies.  do stats??
 perhaps also progress flags - selected, fetched, counting, done, recheck
 and update stats
Provide report of just contestbatches selected for audit
Set template LANGUAGE_CODE or report or fix html errors in databrowse base.html

Put contest abbreviation in a new field, option to print with it or not

Package up, as an egg?  And submit to http://pypi.python.org/pypi
Test on windows

Need a way to sort DRE results out separately.

Option to produce full collection of auditable reports for all contests,
 in pdf?

Encapsulate election-specific data in specific classes
  including list of contest edits ("replacements var"), fields of relevance, etc
  some day: do that based on "programming" data from Hart system?

Auto-sort result files, check for non-incremental results
Check for results that list different candidates for a contest
Look for suspicious audit units, anomalous results
Look for columns that don't agree with previous result
